import { FC } from 'react'
import { classnames } from 'classnames/tailwind'
import Root from 'components/Root'
import useApp from 'hooks/useApp'

const text = classnames(
  'text-primary',
  'text-2xl',
  'md:text-4xl',
  'font-bold',
  'mb-3',
  'md:mb-4'
)
const Text: FC = ({ children }) => <p className={text}>{children}</p>

const link = classnames('underline')
const Link: FC<{ url: string }> = ({ children, url }) => (
  <a href={url} className={link} rel="noopener noreferrer" target="_blank">
    {children}
  </a>
)

const accent = classnames('text-yellow-600')
const Accent: FC = ({ children }) => <span className={accent}>{children}</span>

const textField = classnames(
  'px-6',
  'py-4',
  'my-4',
  'bg-transparent',
  'border',
  'border-gray-400',
  'transition-colors',
  'rounded',
  'text-primary',
  'focus:border-primary',
  'focus:outline-none',
  'placeholder-gray-400',
  'mr-4'
)

const button = (disabled: boolean, loading: boolean) =>
  classnames(
    'px-6',
    'py-4',
    'mb-6',
    disabled || loading ? 'bg-gray-400' : 'bg-primary',
    'text-black-background',
    'rounded',
    loading
      ? 'cursor-wait'
      : disabled
      ? 'cursor-not-allowed'
      : 'cursor-pointer',
    'focus:outline-none',
    'transition-all',
    'ease-in-out',
    disabled ? undefined : 'hover:scale-110',
    disabled ? undefined : 'hover:translate-x-2',
    'transform-gpu'
  )
const Button: FC<{ onClick: () => void; loading: boolean; disabled: boolean }> =
  ({ onClick, children, loading, disabled }) => (
    <button
      className={button(disabled, loading)}
      onClick={onClick}
      disabled={loading || disabled}
    >
      {children}
      {loading && ' ü§î'}
    </button>
  )

const App = () => {
  const {
    submitEmail,
    email,
    loading,
    error,
    setEmail,
    isEmailValid,
    success,
  } = useApp()

  return (
    <Root>
      <Text>
        –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º<Accent>!</Accent> –≠—Ç–æ{' '}
        <Link url="https://borodutch.com">–ù–∏–∫–∏—Ç–∞</Link>
        <Accent>.</Accent>
      </Text>
      <Text>
        –Ø –ø–∏—à—É –∫–Ω–∏–≥—É –æ —Ç–æ–º, –∫–∞–∫ —Ä–µ–∑–∫–æ –ø–æ–≤—ã—Å–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ
        –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π<Accent>!</Accent>
      </Text>
      <Text>
        –ö–Ω–∏–≥–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö —á–∞—Å—Ç–µ–π: —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –≤–Ω–µ—à–Ω–µ–µ —Å—á–∞—Å—Ç—å–µ,
        –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å—á–∞—Å—Ç—å–µ, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—Å–ø–µ—Ö–∞<Accent>.</Accent>
      </Text>
      <Text>
        –ü–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è –≥–æ—Ç–æ–≤–∞ –Ω–∞ 71%<Accent>!</Accent>
      </Text>
      <Text>
        –•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–º–µ–π–ª, –∫–æ–≥–¥–∞ –∫–Ω–∏–≥—É –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∫—É–ø–∏—Ç—å<Accent>?</Accent>{' '}
        –û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É –Ω–∏–∂–µ<Accent>!</Accent>
      </Text>
      <input
        type="email"
        placeholder="–í–∞—à –∏–º–µ–π–ª"
        className={textField}
        value={email}
        onChange={(e) => {
          setEmail(e.target.value)
        }}
        disabled={loading}
      />
      <Button onClick={submitEmail} loading={loading} disabled={!isEmailValid}>
        –û—Å—Ç–∞–≤–∏—Ç—å –ø–æ—á—Ç—É
      </Button>
      {error && (
        <Text>
          –û—Ö, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫<Accent>!</Accent>{' '}
          <Link url="https://t.me/borodutch">–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ</Link> –æ —Ç–æ–º, —á—Ç–æ —É
          –≤–∞—Å –≤—Å–µ —Å–ª–æ–º–∞–ª–æ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞<Accent>!</Accent>
        </Text>
      )}
      {success && (
        <Text>
          –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –æ—Å—Ç–∞–≤–∏–ª–∏ —Å–≤–æ—é –ø–æ—á—Ç—É<Accent>!</Accent> –í—ã –ø–æ–ª—É—á–∏—Ç–µ
          –∏–º–µ–π–ª, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∫–Ω–∏–≥–∞ –ø–æ—Å—Ç—É–ø–∏—Ç –≤ –ø—Ä–æ–¥–∞–∂—É<Accent>!</Accent>
        </Text>
      )}
    </Root>
  )
}

export default App
